(()=>{"use strict";class t extends HTMLElement{constructor(){super();const t=this.attachShadow({mode:"open"});let e=document.createElement("style");e.textContent="\n    :host {\n      position: relative;\n      box-sizing: border-box;\n      display: inline-flex;\n    }\n    .md-button {\n      padding: 0 24px;\n      position: relative;\n      box-sizing: border-box;\n      height: 40px;\n      flex-shrink: 0;\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      color: var(--md-on-primary);\n      font-family: var(--md-font-family);\n      -moz-osx-font-smoothing: grayscale;\n      -webkit-font-smoothing: antialiased;\n      font-size: 0.875rem;\n      font-weight: calc(var(--md-font-base-weight) + 500);\n      letter-spacing: 0.0892857143em;\n      text-decoration: none;\n      text-transform: uppercase;\n      background: rgb(var(--md-primary-rgb));\n      border: none;\n      border-radius: 20px;\n      outline: none;\n      -webkit-user-select: none;\n      user-select: none;\n      cursor: pointer;\n      vertical-align: middle;\n      overflow: visible;\n      transition: 240ms cubic-bezier(0.4, 0, 0.2, 1);\n      -webkit-appearance: none;\n      -moz-appearance: none;\n      -webkit-tap-highlight-color: transparent;\n    }\n    :host([tonal]) .md-button {\n      color: rgb(var(--md-on-secondary-container-rgb));\n      background: rgb(var(--md-secondary-container-rgb));\n    }\n    .md-button:hover {\n      box-shadow: var(--md-elevation-2);\n    }\n    .md-button:focus-visible {\n      box-shadow: none;\n    }\n    .md-button:active {\n      box-shadow: none;\n    }\n    :host([elevated]) .md-button {\n      padding: 0 23px;\n      color: rgb(var(--md-primary-rgb));\n      background-color: var(--md-surface);\n      box-shadow: var(--md-elevation-1);\n    }\n    :host([elevated]) .md-button:hover {\n      box-shadow: var(--md-elevation-2);\n    }\n    :host([elevated]) .md-button:focus-visible {\n      box-shadow: var(--md-elevation-1);\n    }\n    :host([elevated]) .md-button:active {\n      box-shadow: var(--md-elevation-1);\n    }\n    :host([outlined]) .md-button {\n      padding: 0 23px;\n      color: rgb(var(--md-ipt-color, var(--md-primary-rgb)));\n      background-color: var(--md-surface);\n      border: 1px solid var(--md-outline);\n      box-shadow: none;\n    }\n    :host([outlined]) .md-button:focus-visible {\n      border-color: rgb(var(--md-primary-rgb));\n    }\n    :host([outlined]) .md-button:disabled {\n      color: rgba(var(--md-on-surface-rgb), 0.38);\n      border: 1px solid rgba(var(--md-on-surface-rgb), 0.12);\n    }\n    :host([outlined]) md-ripple {\n      top: -1px;\n      left: -1px;\n      right: -1px;\n      bottom: -1px;\n    }\n    :host([text]) .md-button {\n      padding: 0 12px;\n      color: rgb(var(--md-ipt-color, var(--md-primary-rgb)));\n      background: transparent;\n      box-shadow: none;\n    }\n    :host([text]) .md-button:disabled {\n      color: rgba(var(--md-on-surface-rgb), 0.38);\n    }\n    .md-button:disabled,\n    :host([tonal]) .md-button:disabled,\n    :host([elevated]) .md-button:disabled {\n      color: rgba(var(--md-on-surface-rgb), 0.38);\n      background-color: rgba(var(--md-on-surface-rgb), 0.12);\n      cursor: auto;\n      box-shadow: none;\n    }\n    .md-button:disabled md-ripple {\n      display: none;\n    }\n    ";let n=document.createElement("button");n.classList.add("md-button"),n.disabled=this.disabled;let o=document.createElement("span");o.classList.add("md-button__label"),o.textContent=this.getAttribute("label");let a=document.createElement("md-ripple");t.appendChild(e),t.appendChild(n),n.appendChild(o),n.appendChild(a)}get disabled(){return null!=this.getAttribute("disabled")}set disabled(t){t?this.setAttribute("disabled",""):this.removeAttribute("disabled")}static get observedAttributes(){return["label","disabled","icon","loading"]}connectedCallback(){this.button=this.shadowRoot.querySelector(".md-button"),this.label=this.shadowRoot.querySelector(".md-button__label")}attributeChangedCallback(t,e,n){"label"===t&&this.button&&(this.shadowRoot.querySelector(".md-button__label").textContent=n),"disabled"===t&&this.button&&(this.button.disabled=this.disabled)}adoptedCallback(){}disconnectedCallback(){}}class e extends HTMLElement{constructor(){super();const t=this.attachShadow({mode:"open"});let e=document.createElement("style");e.textContent="\n    ",t.appendChild(e)}static get observedAttributes(){return[]}connectedCallback(){}attributeChangedCallback(t,e,n){}adoptedCallback(){}disconnectedCallback(){}}class n extends HTMLElement{constructor(){super();const t=this.attachShadow({mode:"open"});let e=document.createElement("style");e.textContent="\n    ",t.appendChild(e)}get disabled(){return null!=this.getAttribute("disabled")}set disabled(t){t?this.setAttribute("disabled",""):this.removeAttribute("disabled")}static get observedAttributes(){return["disabled"]}connectedCallback(){}attributeChangedCallback(t,e,n){}adoptedCallback(){}disconnectedCallback(){}}customElements.define("md-button",t),customElements.define("md-card",e),customElements.define("md-ripple",n)})();
//# sourceMappingURL=mwu.min.js.map